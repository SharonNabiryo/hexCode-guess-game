{"ast":null,"code":"var _jsxFileName = \"/Users/sharongless/Desktop/PROJECTS/hexCode Guess Game/hexCode-guess-game/hexcode-guess-game/src/components/ColorCodes.js\";\nimport React from \"react\";\n\n// Build a game called Color Codes that displays a random color code HEX and asks the user to select which color it is.\n// It should display 3 colored boxes, and the user should be able to click on one of them to select their answer.\n// You should aim to match the styling and functionality of the solution preview below as closely as possible:\n// If the user selects the correct color, it should display a message saying \"Correct!\" and if they select the wrong color,\n// it should display a message saying \"Incorrect!\".\n// After each selection display a button to play again with the text \"Play Again\".\n// When the user clicks the play again button, it should generate a new color code and new colored boxes,\n// and they should be able to start the game again.\n// To add styles, you can use the inline style property\n// <div style={{ background: \"#000000\" }}>...</div>\n// Criteria\n// 1. The colored boxes should be displayed below the color code, and should be 100px by 100px in size.\n// 2. The user should be able to click on one of the colored boxes to select their answer, ending the game.\n// 3. If the user selects the correct color, it should display a message saying Correct! and a button to play again.\n// 4. If the user selects the wrong color, it should display a message saying \"Incorrect!\" and a button to play again.\n// 5. When the user clicks the play again button Play Again, it should generate a new color code and new colored boxes.\n// 6. The container for the colored boxes should have a data-testid of color-container.\n// 7. The colored boxes should have a data-testid of correct-color if it is the correct color,\n// and incorrect-color if it is not the correct color.\n// Note: Without the data-testid properties, your tests will fail.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ColorCodes() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hello\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_c = ColorCodes;\nvar _c;\n$RefreshReg$(_c, \"ColorCodes\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ColorCodes","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sharongless/Desktop/PROJECTS/hexCode Guess Game/hexCode-guess-game/hexcode-guess-game/src/components/ColorCodes.js"],"sourcesContent":["import React from \"react\";\n\n// Build a game called Color Codes that displays a random color code HEX and asks the user to select which color it is.\n// It should display 3 colored boxes, and the user should be able to click on one of them to select their answer.\n// You should aim to match the styling and functionality of the solution preview below as closely as possible:\n// If the user selects the correct color, it should display a message saying \"Correct!\" and if they select the wrong color,\n// it should display a message saying \"Incorrect!\".\n// After each selection display a button to play again with the text \"Play Again\".\n// When the user clicks the play again button, it should generate a new color code and new colored boxes,\n// and they should be able to start the game again.\n// To add styles, you can use the inline style property\n// <div style={{ background: \"#000000\" }}>...</div>\n// Criteria\n// 1. The colored boxes should be displayed below the color code, and should be 100px by 100px in size.\n// 2. The user should be able to click on one of the colored boxes to select their answer, ending the game.\n// 3. If the user selects the correct color, it should display a message saying Correct! and a button to play again.\n// 4. If the user selects the wrong color, it should display a message saying \"Incorrect!\" and a button to play again.\n// 5. When the user clicks the play again button Play Again, it should generate a new color code and new colored boxes.\n// 6. The container for the colored boxes should have a data-testid of color-container.\n// 7. The colored boxes should have a data-testid of correct-color if it is the correct color,\n// and incorrect-color if it is not the correct color.\n// Note: Without the data-testid properties, your tests will fail.\n\nexport default function ColorCodes() {\n  return (\n    <div>\n      <h1>Hello</h1>\n    </div>\n  );\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,eAAe,SAASC,UAAUA,CAAA,EAAG;EACnC,oBACED,OAAA;IAAAE,QAAA,eACEF,OAAA;MAAAE,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACX,CAAC;AAEV;AAACC,EAAA,GANuBN,UAAU;AAAA,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}